% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plotCAT.R
\name{plotCAT}
\alias{plotCAT}
\title{CAT Plots of Differential Express Features}
\usage{
plotCAT(dat1, dat2, constant = NULL, microarray = NULL, step = 5L,
  type = "l", lwd = 2, col = NULL, xlim = c(20, 2000), ylim = c(0, 1),
  xlab = "Size of List", ylab = "Proportion in Common", ...)
}
\arguments{
\item{dat1,dat2}{\code{rnaseqcomp} S4 class objects for two
conditions. \code{dat1} and \code{dat2} should have the same
size of slot \code{quantData} and the same \code{repInfo}.}

\item{constant}{A numeric constant that can be added to
quantifications before fold changes calculation
(default: NULL).}

\item{microarray}{A numeric vector of fold change by
microarray or other 'gold standard', with each elements
corresponding to rows of \code{quantData} slot in \code{dat1}
or \code{dat2}. Missing data NA allowed. (default: NULL)}

\item{step}{Plot steps on x-axis (default: 5).}

\item{type}{Plot types (default: 'l').}

\item{lwd}{Plot line weights (default: 2).}

\item{col}{Plot colors (default: NULL, colors are assigned
by package \code{RColorBrewer}).}

\item{xlim}{Plot limits of x-axis (default: c(20, 2000)).}

\item{ylim}{Plot limits of y-axis (default: c(0, 1)).}

\item{xlab}{Plot label of x-axis
(default: 'Size of List').}

\item{ylab}{Plot label of y-axis
(default: 'Proportion in Common').}

\item{...}{Other parameters for base function \code{plot}.}
}
\value{
\item{CAT plot}{CAT plots for all the quantification pipelines.}
\item{Precision or Accuaracy}{A numeric vector of pipeline
precision or accuracy, depending on whether microarray is
provided.}
}
\description{
For each pipeline, 2 biological conditions
(cell lines) each with 2 quantification replicates are
compared and fold changes of each replicate are calculated.
Then, CAT plots between replicates (precision) or between
mean of replicates and microarray (accuracy).
}
\examples{
data(encodeCells)
txFIdx <- encodeCells$genemeta$type == "protein_coding"
hkIdx <- encodeCells$genemeta$housekeeping
unitFIdx <- grepl("Cufflinks",encodeCells$repInfo)
dat1 <- matrixFilter(encodeCells$gm12878,encodeCells$repInfo,
txFIdx,hkIdx,unitFIdx)
dat2 <- matrixFilter(encodeCells$k562,encodeCells$repInfo,
txFIdx,hkIdx,unitFIdx)

plotCAT(dat1,dat2)
plotCAT(dat1,dat2,constant=1)

genes <- encodeCells$genemeta[encodeCells$genemeta$type ==
"protein_coding", 1]
microarray <- encodeCells$arrayFC[match(genes,names(encodeCells$arrayFC))]
plotCAT(dat1,dat2,microarray=microarray)
plotCAT(dat1,dat2,constant=1,microarray=microarray)
}

